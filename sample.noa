// Variables
var a = 10; // Number
var b = 10.20; // Floating Point Number
var c = "Hello world"; // String
var d = true; // Boolean
var e = nil; // Nil
var a = {
    "name": "Siddharth",
    "properties": {
        "age": 22,
        "job": "Developer",        
    },
}; // Table

// Arithmentic operators
a = 10 + 20;
a = 10 - 20;
a = 10 / 20;
a = 10 * 20;

// String concat
b = "Hello " + "World"; b = 10 + "Hello";

// Ternary operator
a = 10 > 20 ? "10 is bigger than 20" : "10 is not bigger than 20";

// Comparison operators
print(10 > 10 == 10 > 10 != "A" <= "B");

// Negation operators
print(-10);
print(!false);

// Blocks
{
    var a = 20;
    print(a);

    {
        var c = 30;
        print(c);
    }
}

// If statemnts
if (true) {
    print("yes");
} else {
    print("no");
}

// Logical operators
if (true and true or false) {
    print("what");
}

// More use case of logical operators
print(false or "Hello"); // Returns the truthy operand
print(true and "Hello"); // Returns the right operand if both operands are truthy

// Loops
{
    var i = 0;
    while (i < 10) {
        print(i);
        i = i + 1;
    }
}

for (var i = 0; i < 10 ; i = i + 1) {
    print(i);
}

// Functions
print("Print function");

fun test(a,b,c) {
    print(a);
    print(b);
}

test(1, 2, a); // Number of parameters must match

// Recursion is also supported
fun rec() {
    // rec();
    return "this will appear";
    print("this will not appear");
}
print(rec());


fun closure() {
    var count = 0;

    fun counter() {
        count = count +1;
        return count;

    }
    return counter;
}

var counter = closure();

print(counter()); // 1
print(counter()); // 2
print(counter()); // 3

// Tables

var a = {
    "name": "Siddharth",
    "properties": {
        "age": 22,
        "job": "Developer",        
    },
};
print(a);

// Key access
print(a["name"]);
a["name"] = "Roy";
print(a["name"]);


// Create OOP like objects
fun create_actor() {
    var a = {
        "health": 100,
    };

    fun take_damage(amount) {
        a["health"] = a["health"] - amount;
    }

    a["take_damage"] = take_damage;

    return a;
}

var actor1 = create_actor();
print(actor1);
actor1["take_damage"](10);
print(actor1);
print((create_actor())["health"]);